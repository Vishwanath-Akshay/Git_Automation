name: Run Code Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Detect Changed Files
      id: changed-files
      uses: tj-actions/changed-files@v44

    - name: Determine File Types
      id: detect-language
      run: |
        echo "Checking which files changed..."
        CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
        RUN_C=0
        RUN_CPP=0
        RUN_PYTHON=0
        RUN_JAVA=0

        for FILE in $CHANGED_FILES; do
          case "$FILE" in
            solutions/*.c) RUN_C=1 ;;
            solutions/*.cpp) RUN_CPP=1 ;;
            solutions/*.py) RUN_PYTHON=1 ;;
            solutions/*.java) RUN_JAVA=1 ;;
          esac
        done

        echo "RUN_C=$RUN_C" >> $GITHUB_ENV
        echo "RUN_CPP=$RUN_CPP" >> $GITHUB_ENV
        echo "RUN_PYTHON=$RUN_PYTHON" >> $GITHUB_ENV
        echo "RUN_JAVA=$RUN_JAVA" >> $GITHUB_ENV

    - name: Install Dependencies
      run: |
        set -e
        sudo apt-get update
        if [[ "$RUN_C" == "1" || "$RUN_CPP" == "1" || "$RUN_JAVA" == "1" ]]; then
          sudo apt-get install -y gcc g++ default-jdk
        fi
        if [[ "$RUN_PYTHON" == "1" ]]; then
          python3 -m pip install --upgrade pip pytest
        fi

    - name: Compile and Run C Tests
      if: env.RUN_C == '1'
      run: |
        echo "Running C Test Cases..."
        gcc -o tests/test tests/test.c solutions/solution.c
        ./tests/test

    - name: Compile and Run C++ Tests
      if: env.RUN_CPP == '1'
      run: |
        echo "Running C++ Test Cases..."
        g++ -o tests/test tests/test.cpp solutions/solution.cpp
        ./tests/test

    - name: Run Python Tests (Formatted Output)
      if: env.RUN_PYTHON == '1'
      run: |
        echo "Running Python Test Cases..."
        export PYTHONUNBUFFERED=1  
        export PYTHONPATH=$PWD  
        python3 tests/test.py | tee test_results.log

    - name: Compile and Run Java Tests
      if: env.RUN_JAVA == '1'
      run: |
        echo "Running Java Test Cases..."
        javac -d . solutions/Solution1.java tests/Test1.java
        java tests.Test

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test_results.log


